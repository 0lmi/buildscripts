#!/bin/sh -ex

# This script takes the output of the running our tests and publish the html

. `dirname "$0"`/functions
. detect-environment
. compile-options

COVERAGE_FOLDER=coverage-html
LCOV=lcov
LCOV_FLAGS="--rc lcov_branch_coverage=1"
LCOV_GENHTML=genhtml
produce_empty_coverage() {
    cd $BASEDIR/core
    mkdir -p $COVERAGE_FOLDER
    echo "Producing empty coverage report"
    echo "<html><body>Coverage report is only produced for Linux platforms.</body></html>" > $COVERAGE_FOLDER/index.html
    cd $BASEDIR
}

produce_coverage() {
    cd $BASEDIR/core
    $LCOV $LCOV_FLAGS --capture --initial --directory . --output-file cfengine-lcov-base.info
    $LCOV $LCOV_FLAGS --capture --directory . --output-file cfengine-lcov.info --test-name CFENGINE --no-checksum --compat-libtool
    $LCOV $LCOV_FLAGS -a cfengine-lcov-base.info -a cfengine-lcov.info --output-file cfengine-lcov.info
    $LCOV $LCOV_FLAGS --remove cfengine-lcov.info '/usr/include/*' --output-file cfengine-lcov.info
    LANG=C $LCOV_GENHTML $LCOV_FLAGS --prefix . --output-directory coverage-html --title "CFEngine Code Coverage" --legend --show-details cfengine-lcov.info
    cd $BASEDIR
}

case "${OS}-${OS_VERSION}" in 
mingw*)
    echo "Coverage information not requested."
    produce_empty_coverage
    ;;
hpux*)
    echo "Coverage information not requested."
    produce_empty_coverage
    ;;
solaris*)
    echo "Coverage information not requested."
    produce_empty_coverage
    ;;
rhel-4.*)
    echo "Coverage information not requested."
    produce_empty_coverage
    ;;
*)
    echo "Producing coverage information."
    produce_coverage
    ;;
esac

echo "Coverage information produced."

exit 0

